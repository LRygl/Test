{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moro\\\\Desktop\\\\Java\\\\SpringRestAPI\\\\src\\\\js\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Container from './Container';\nimport Footer from './Footer';\nimport './App.css';\nimport { getAllStudents } from './client';\nimport AddStudentForm from './forms/AddStudentForm';\nimport { errorNotification, successNotification } from './Notification';\nimport { Table, Avatar, Modal, Empty, Icon } from \"antd\";\nimport { LoadingOutlined } from '@ant-design/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst getIndicatorIcon = () => /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n  style: {\n    fontSize: '48px'\n  },\n  spin: true\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 12,\n  columnNumber: 32\n}, this);\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      students: [],\n      isFetching: false,\n      isAddStudentModalVisible: false\n    };\n\n    this.openAddStudentModal = () => this.setState({\n      isAddStudentModalVisible: true\n    });\n\n    this.closeAddStudentModal = () => this.setState({\n      isAddStudentModalVisible: false\n    });\n\n    this.fetchStudents = () => {\n      //Nastav state pro spinner -> načítám data\n      this.setState({\n        isFetching: true\n      }); //Vypiš všechny studenty do students a do logu\n\n      getAllStudents().then(res => res.json().then(students => {\n        console.log(students); //vrací hodnotu do students a nastaví fetching na false -> dokončeno fetchovani\n\n        this.setState({\n          students,\n          isFetching: false\n        });\n      })).catch(error => {\n        console.log(error.error);\n        const message = error.error.message;\n        const description = error.error.error;\n        errorNotification(message, description);\n        this.setState({\n          isFetching: false\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.fetchStudents();\n  }\n\n  render() {\n    const {\n      students,\n      isFetching,\n      isAddStudentModalVisible\n    } = this.state; // Common elements modal a footer pro stránku Ok a No studentFound\n\n    const commonElements = () => /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Modal, {\n        title: \"+ Add New Student}\",\n        visible: isAddStudentModalVisible,\n        onOk: this.closeAddStudentModal,\n        onCancel: this.closeAddStudentModal,\n        width: 250,\n        children: /*#__PURE__*/_jsxDEV(AddStudentForm, {\n          onSuccess: () => {\n            this.closeAddStudentModal();\n            this.fetchStudents();\n          },\n          onFailure: error => {\n            const message = error.error.message;\n            const description = error.error.httpStatus;\n            console.log(JSON.stringify(error));\n            errorNotification(message, description);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {\n        numberOfStudents: students.length,\n        handleAddStudentClickEvent: this.openAddStudentModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this);\n\n    if (isFetching) {\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(LoadingOutlined, {\n          indicator: getIndicatorIcon()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this);\n    } //pokud students !empty vytisnkni studenty, jinak ->\n\n\n    if (students && students.length) {\n      //Sloupce tabulky + AVATAR vytvoření z prvních písmen frsn a lasn\n      const columns = [{\n        title: '',\n        key: 'Avatar',\n        render: (text, student) => /*#__PURE__*/_jsxDEV(Avatar, {\n          size: \"large\",\n          children: `${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 13\n        }, this)\n      }, {\n        title: 'Student Id',\n        dataIndex: 'studentId',\n        key: 'studentId'\n      }, {\n        title: 'firstName',\n        dataIndex: 'firstName',\n        key: 'firstName'\n      }, {\n        title: 'lastName',\n        dataIndex: 'lastName',\n        key: 'lastName'\n      }, {\n        title: 'email',\n        dataIndex: 'email',\n        key: 'email'\n      }, {\n        title: 'gender',\n        dataIndex: 'gender',\n        key: 'gender'\n      }]; //samotný print obsahu zdroj, sloupce, pagintation a podle čeho bereme studenty\n      //Container dělá odsazení tabulky od okrajů a je v Container.JS\n\n      return /*#__PURE__*/_jsxDEV(Container, {\n        children: [/*#__PURE__*/_jsxDEV(Table, {\n          style: {\n            marginBottom: '70px'\n          },\n          dataSource: students,\n          columns: columns,\n          pagination: false,\n          rowKey: \"studentId\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this), commonElements()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this);\n    } // POkud neexistuje žádný student, zobraz hlášku\n\n\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(Empty, {\n        description: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No Students were found\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this), commonElements()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/moro/Desktop/Java/SpringRestAPI/src/js/src/App.js"],"names":["React","Component","Container","Footer","getAllStudents","AddStudentForm","errorNotification","successNotification","Table","Avatar","Modal","Empty","Icon","LoadingOutlined","getIndicatorIcon","fontSize","App","state","students","isFetching","isAddStudentModalVisible","openAddStudentModal","setState","closeAddStudentModal","fetchStudents","then","res","json","console","log","catch","error","message","description","componentDidMount","render","commonElements","httpStatus","JSON","stringify","length","columns","title","key","text","student","firstName","charAt","toUpperCase","lastName","dataIndex","marginBottom"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Container from './Container';\r\nimport Footer from './Footer';\r\nimport './App.css';\r\nimport {getAllStudents } from './client';\r\nimport AddStudentForm from './forms/AddStudentForm';\r\nimport {errorNotification, successNotification} from './Notification';\r\nimport {Table, Avatar, Modal, Empty, Icon} from \"antd\";\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst getIndicatorIcon = () => <LoadingOutlined style={{ fontSize: '48px'}} spin/>;\r\n\r\nclass App extends Component{\r\n\r\n  //Nastav students na empty \r\n  //Nastav spinner na false\r\nstate = {\r\n  students: [],\r\n  isFetching: false,\r\n  isAddStudentModalVisible: false\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.fetchStudents();\r\n}\r\n\r\n\r\nopenAddStudentModal = () => this.setState({isAddStudentModalVisible:true})\r\ncloseAddStudentModal = () => this.setState({isAddStudentModalVisible:false})\r\n\r\n//Metoda pro získání všech studentů z JSON\r\nfetchStudents = ()=> {\r\n  //Nastav state pro spinner -> načítám data\r\n  this.setState({\r\n    isFetching: true\r\n  });\r\n  //Vypiš všechny studenty do students a do logu\r\n  getAllStudents()\r\n    .then(res => res.json()\r\n    .then(students => {\r\n      console.log(students);\r\n      //vrací hodnotu do students a nastaví fetching na false -> dokončeno fetchovani\r\n      this.setState({\r\n        students,\r\n        isFetching: false\r\n      });\r\n  }))\r\n  .catch(error => {\r\n    console.log(error.error);\r\n    const message = error.error.message;\r\n    const description = error.error.error;\r\n    errorNotification(message, description);\r\n    this.setState({\r\n      isFetching: false\r\n    });\r\n  });\r\n}\r\n\r\nrender() {\r\n\r\n    const {students, isFetching, isAddStudentModalVisible} = this.state;\r\n\r\n    // Common elements modal a footer pro stránku Ok a No studentFound\r\n    const commonElements = () => (\r\n      <div>\r\n        <Modal\r\n          title='+ Add New Student}'\r\n          visible={isAddStudentModalVisible}\r\n          onOk={this.closeAddStudentModal}\r\n          onCancel={this.closeAddStudentModal}\r\n          width={250}>\r\n          \r\n            <AddStudentForm \r\n              onSuccess={()=>{\r\n                this.closeAddStudentModal();\r\n                this.fetchStudents();\r\n              }}\r\n              onFailure={(error)=> {\r\n                const message = error.error.message;\r\n                const description = error.error.httpStatus;\r\n                console.log(JSON.stringify(error));\r\n                errorNotification(message,description);\r\n              }}\r\n            />\r\n        </Modal>\r\n        <Footer \r\n          numberOfStudents={students.length}\r\n          handleAddStudentClickEvent={this.openAddStudentModal}>\r\n        </Footer>\r\n      </div>\r\n    )\r\n\r\n    if (isFetching){\r\n      return(\r\n        <Container>\r\n          <LoadingOutlined indicator={getIndicatorIcon()}/>\r\n        </Container>\r\n      )\r\n    }\r\n\r\n    //pokud students !empty vytisnkni studenty, jinak ->\r\n    if (students && students.length) {\r\n      \r\n      //Sloupce tabulky + AVATAR vytvoření z prvních písmen frsn a lasn\r\n      const columns = [\r\n        {\r\n        title: '',\r\n        key: 'Avatar',\r\n        render:(text,student)=>(\r\n            <Avatar size='large'>\r\n              {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\r\n            </Avatar>\r\n          )\r\n        },\r\n      \r\n        {\r\n          title: 'Student Id',\r\n          dataIndex: 'studentId',\r\n          key: 'studentId'\r\n        },\r\n        {\r\n          title: 'firstName',\r\n          dataIndex: 'firstName',\r\n          key: 'firstName'\r\n        },\r\n        {\r\n          title: 'lastName',\r\n          dataIndex: 'lastName',\r\n          key: 'lastName'\r\n        },\r\n        {\r\n          title: 'email',\r\n          dataIndex: 'email',\r\n          key: 'email'\r\n        },\r\n        {\r\n          title: 'gender',\r\n          dataIndex: 'gender',\r\n          key: 'gender'\r\n        },\r\n      ];\r\n//samotný print obsahu zdroj, sloupce, pagintation a podle čeho bereme studenty\r\n//Container dělá odsazení tabulky od okrajů a je v Container.JS\r\n      return (\r\n        <Container>  \r\n          <Table \r\n            style={{marginBottom:'70px'}}\r\n            dataSource={students} \r\n            columns={columns} \r\n            pagination={false}\r\n            rowKey='studentId' \r\n          />\r\n        {commonElements()}\r\n        </Container>\r\n\r\n      );\r\n\r\n    }\r\n    // POkud neexistuje žádný student, zobraz hlášku\r\n    return (\r\n      <Container>\r\n        <Empty description={\r\n          <h1>No Students were found</h1>\r\n        } />\r\n        {commonElements()}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}