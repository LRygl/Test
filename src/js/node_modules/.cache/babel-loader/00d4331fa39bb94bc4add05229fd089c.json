{"ast":null,"code":"import fetch from 'unfetch';\n\nconst checkStatus = response => {\n  if (response.ok) {\n    return response;\n  } else {\n    let error = new Error(response.statusText);\n    error.response = response;\n    response.json().then(e => {\n      error.error = e;\n    });\n    return Promise.reject(error);\n  }\n};\n\nexport const getAllStudents = () => fetch('api/students').then(checkStatus);\nexport const addNewStudent = student => fetch('api/students', {\n  headers: {\n    'Content-Type': 'application/json'\n  },\n  method: 'POST',\n  body: JSON.stringify(student)\n}).then(checkStatus);","map":{"version":3,"sources":["C:/Users/moro/Desktop/Java/SpringRestAPI/src/js/src/client.js"],"names":["fetch","checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","getAllStudents","addNewStudent","student","headers","method","body","JSON","stringify"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,SAAlB;;AAEA,MAAMC,WAAW,GAAGC,QAAQ,IAAI;AAC5B,MAAIA,QAAQ,CAACC,EAAb,EAAiB;AACb,WAAOD,QAAP;AACH,GAFD,MAEO;AACH,QAAIE,KAAK,GAAG,IAAIC,KAAJ,CAAUH,QAAQ,CAACI,UAAnB,CAAZ;AACAF,IAAAA,KAAK,CAACF,QAAN,GAAiBA,QAAjB;AACAA,IAAAA,QAAQ,CAACK,IAAT,GAAgBC,IAAhB,CAAqBC,CAAC,IAAI;AACtBL,MAAAA,KAAK,CAACA,KAAN,GAAcK,CAAd;AACH,KAFD;AAGA,WAAOC,OAAO,CAACC,MAAR,CAAeP,KAAf,CAAP;AACH;AACJ,CAXD;;AAcA,OAAO,MAAMQ,cAAc,GAAG,MAC1BZ,KAAK,CAAC,cAAD,CAAL,CAAsBQ,IAAtB,CAA2BP,WAA3B,CADG;AAGP,OAAO,MAAMY,aAAa,GAAGC,OAAO,IAChCd,KAAK,CAAC,cAAD,EAAiB;AAClBe,EAAAA,OAAO,EAAE;AACL,oBAAgB;AADX,GADS;AAIlBC,EAAAA,MAAM,EAAE,MAJU;AAKlBC,EAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeL,OAAf;AALY,CAAjB,CAAL,CAOCN,IAPD,CAOMP,WAPN,CADG","sourcesContent":["import fetch from 'unfetch';\r\n\r\nconst checkStatus = response => {\r\n    if (response.ok) {\r\n        return response\r\n    } else {\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        response.json().then(e => {\r\n            error.error = e;\r\n        });\r\n        return Promise.reject(error);\r\n    }\r\n}\r\n\r\n\r\nexport const getAllStudents = () => \r\n    fetch('api/students').then(checkStatus);\r\n\r\nexport const addNewStudent = student => \r\n    fetch('api/students', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(student)\r\n    })\r\n    .then(checkStatus);\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}