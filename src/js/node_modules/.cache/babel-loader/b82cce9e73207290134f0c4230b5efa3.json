{"ast":null,"code":"import{notification}from'antd';var openNotification=function openNotification(type,message,description){notification[type]({message:message,description:description});};export var successNotification=function successNotification(message,description){return openNotification('sucess',message,description);};export var infoNotification=function infoNotification(message,description){return openNotification('info',message,description);};export var warningNotification=function warningNotification(message,description){return openNotification('warning',message,description);};export var errorNotification=function errorNotification(message,description){return openNotification('error',message,description);};","map":{"version":3,"sources":["C:/Users/moro/Desktop/Java/SpringRestAPI/src/js/src/Notification.js"],"names":["notification","openNotification","type","message","description","successNotification","infoNotification","warningNotification","errorNotification"],"mappings":"AACA,OAASA,YAAT,KAA6B,MAA7B,CAEA,GAAMC,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACC,IAAD,CAAOC,OAAP,CAAgBC,WAAhB,CAA+B,CACpDJ,YAAY,CAACE,IAAD,CAAZ,CAAmB,CACjBC,OAAO,CAAPA,OADiB,CAEjBC,WAAW,CAAXA,WAFiB,CAAnB,EAID,CALH,CAOA,MAAO,IAAMC,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACF,OAAD,CAASC,WAAT,QAAyBH,CAAAA,gBAAgB,CAAC,QAAD,CAAUE,OAAV,CAAkBC,WAAlB,CAAzC,EAA5B,CACP,MAAO,IAAME,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,CAACH,OAAD,CAASC,WAAT,QAAyBH,CAAAA,gBAAgB,CAAC,MAAD,CAAQE,OAAR,CAAgBC,WAAhB,CAAzC,EAAzB,CACP,MAAO,IAAMG,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,CAACJ,OAAD,CAASC,WAAT,QAAyBH,CAAAA,gBAAgB,CAAC,SAAD,CAAWE,OAAX,CAAmBC,WAAnB,CAAzC,EAA5B,CACP,MAAO,IAAMI,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACL,OAAD,CAASC,WAAT,QAAyBH,CAAAA,gBAAgB,CAAC,OAAD,CAASE,OAAT,CAAiBC,WAAjB,CAAzC,EAA1B","sourcesContent":["\r\nimport { notification } from 'antd';\r\n\r\nconst openNotification = (type, message, description)=> {\r\n    notification[type]({\r\n      message,\r\n      description\r\n    });\r\n  };\r\n\r\nexport const successNotification = (message,description) => openNotification('sucess',message,description);\r\nexport const infoNotification = (message,description) => openNotification('info',message,description);\r\nexport const warningNotification = (message,description) => openNotification('warning',message,description);\r\nexport const errorNotification = (message,description) => openNotification('error',message,description);"]},"metadata":{},"sourceType":"module"}