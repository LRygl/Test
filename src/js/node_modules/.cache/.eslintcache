[{"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\index.js":"1","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\App.js":"2","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\reportWebVitals.js":"3","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\Container.js":"4","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\Footer.js":"5","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\client.js":"6","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\Notification.js":"7","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\forms\\AddStudentForm.js":"8"},{"size":547,"mtime":1613470057238,"results":"9","hashOfConfig":"10"},{"size":4703,"mtime":1613470057214,"results":"11","hashOfConfig":"10"},{"size":375,"mtime":1613470057242,"results":"12","hashOfConfig":"10"},{"size":238,"mtime":1613470057219,"results":"13","hashOfConfig":"10"},{"size":643,"mtime":1613470057223,"results":"14","hashOfConfig":"10"},{"size":690,"mtime":1613470057230,"results":"15","hashOfConfig":"10"},{"size":606,"mtime":1613470057226,"results":"16","hashOfConfig":"10"},{"size":4077,"mtime":1613470057232,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"ahnqt",{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\index.js",[],"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\App.js",["35","36"],"import React, { Component } from 'react';\r\nimport Container from './Container';\r\nimport Footer from './Footer';\r\nimport './App.css';\r\nimport {getAllStudents } from './client';\r\nimport AddStudentForm from './forms/AddStudentForm';\r\nimport {errorNotification, successNotification} from './Notification';\r\nimport {Table, Avatar, Modal, Empty, Icon} from \"antd\";\r\nimport {LoadingOutlined} from '@ant-design/icons';\r\n\r\n\r\nconst getIndicatorIcon = () => <LoadingOutlined style={{ fontSize: '48px'}} spin/>;\r\n\r\nclass App extends Component{\r\n\r\n  //Nastav students na empty \r\n  //Nastav spinner na false\r\nstate = {\r\n  students: [],\r\n  isFetching: false,\r\n  isAddStudentModalVisible: false\r\n}\r\n\r\ncomponentDidMount(){\r\n  this.fetchStudents();\r\n}\r\n\r\n\r\nopenAddStudentModal = () => this.setState({isAddStudentModalVisible:true})\r\ncloseAddStudentModal = () => this.setState({isAddStudentModalVisible:false})\r\n\r\n//Metoda pro získání všech studentů z JSON\r\nfetchStudents = ()=> {\r\n  //Nastav state pro spinner -> načítám data\r\n  this.setState({\r\n    isFetching: true\r\n  });\r\n  //Vypiš všechny studenty do students a do logu\r\n  getAllStudents()\r\n    .then(res => res.json()\r\n    .then(students => {\r\n      console.log(students);\r\n      //vrací hodnotu do students a nastaví fetching na false -> dokončeno fetchovani\r\n      this.setState({\r\n        students,\r\n        isFetching: false\r\n      });\r\n  }))\r\n  .catch(error => {\r\n    console.log(error.error);\r\n    const message = error.error.message;\r\n    const description = error.error.error;\r\n    errorNotification(message, description);\r\n    this.setState({\r\n      isFetching: false\r\n    });\r\n  });\r\n}\r\n\r\nrender() {\r\n\r\n    const {students, isFetching, isAddStudentModalVisible} = this.state;\r\n\r\n    // Common elements modal a footer pro stránku Ok a No studentFound\r\n    const commonElements = () => (\r\n      <div>\r\n        <Modal\r\n          title='+ Add New Student}'\r\n          visible={isAddStudentModalVisible}\r\n          onOk={this.closeAddStudentModal}\r\n          onCancel={this.closeAddStudentModal}\r\n          width={250}>\r\n          \r\n            <AddStudentForm \r\n              onSuccess={()=>{\r\n                this.closeAddStudentModal();\r\n                this.fetchStudents();\r\n              }}\r\n              onFailure={(error)=> {\r\n                const message = error.error.message;\r\n                const description = error.error.httpStatus;\r\n                console.log(JSON.stringify(error));\r\n                errorNotification(message,description);\r\n              }}\r\n            />\r\n        </Modal>\r\n        <Footer \r\n          numberOfStudents={students.length}\r\n          handleAddStudentClickEvent={this.openAddStudentModal}>\r\n        </Footer>\r\n      </div>\r\n    )\r\n\r\n    if (isFetching){\r\n      return(\r\n        <Container>\r\n          <LoadingOutlined indicator={getIndicatorIcon()}/>\r\n        </Container>\r\n      )\r\n    }\r\n\r\n    //pokud students !empty vytisnkni studenty, jinak ->\r\n    if (students && students.length) {\r\n      \r\n      //Sloupce tabulky + AVATAR vytvoření z prvních písmen frsn a lasn\r\n      const columns = [\r\n        {\r\n        title: '',\r\n        key: 'Avatar',\r\n        render:(text,student)=>(\r\n            <Avatar size='large'>\r\n              {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\r\n            </Avatar>\r\n          )\r\n        },\r\n      \r\n        {\r\n          title: 'Student Id',\r\n          dataIndex: 'studentId',\r\n          key: 'studentId'\r\n        },\r\n        {\r\n          title: 'firstName',\r\n          dataIndex: 'firstName',\r\n          key: 'firstName'\r\n        },\r\n        {\r\n          title: 'lastName',\r\n          dataIndex: 'lastName',\r\n          key: 'lastName'\r\n        },\r\n        {\r\n          title: 'email',\r\n          dataIndex: 'email',\r\n          key: 'email'\r\n        },\r\n        {\r\n          title: 'gender',\r\n          dataIndex: 'gender',\r\n          key: 'gender'\r\n        },\r\n      ];\r\n//samotný print obsahu zdroj, sloupce, pagintation a podle čeho bereme studenty\r\n//Container dělá odsazení tabulky od okrajů a je v Container.JS\r\n      return (\r\n        <Container>  \r\n          <Table \r\n            style={{marginBottom:'70px'}}\r\n            dataSource={students} \r\n            columns={columns} \r\n            pagination={false}\r\n            rowKey='studentId' \r\n          />\r\n        {commonElements()}\r\n        </Container>\r\n\r\n      );\r\n\r\n    }\r\n    // POkud neexistuje žádný student, zobraz hlášku\r\n    return (\r\n      <Container>\r\n        <Empty description={\r\n          <h1>No Students were found</h1>\r\n        } />\r\n        {commonElements()}\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\reportWebVitals.js",[],"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\Container.js",[],"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\Footer.js",[],"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\client.js",[],"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\Notification.js",[],"C:\\Users\\moro\\Desktop\\Java\\SpringRestAPI\\src\\js\\src\\forms\\AddStudentForm.js",[],{"ruleId":"37","severity":1,"message":"38","line":7,"column":28,"nodeType":"39","messageId":"40","endLine":7,"endColumn":47},{"ruleId":"37","severity":1,"message":"41","line":8,"column":38,"nodeType":"39","messageId":"40","endLine":8,"endColumn":42},"no-unused-vars","'successNotification' is defined but never used.","Identifier","unusedVar","'Icon' is defined but never used."]