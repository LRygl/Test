{"version":3,"sources":["Container.js","Footer.js","client.js","forms/AddStudentForm.js","Notification.js","App.js","reportWebVitals.js","index.js"],"names":["Container","props","style","width","margin","textAlign","paddingBottom","children","Footer","className","undefined","numberOfStudents","backgroundColor","marginRight","size","onClick","handleAddStudentClickEvent","type","checkStatus","response","ok","error","Error","statusText","json","then","e","Promise","reject","getAllStudents","fetch","inputButtonMargin","marginBottom","tagStyle","color","AddStudentForm","initialValues","firstName","lastName","email","gender","validate","values","errors","test","includes","onSubmit","newStudent","student","setSubmitting","headers","method","body","JSON","stringify","onSuccess","catch","err","onFailure","finally","touched","handleChange","handleBlur","handleSubmit","isSubmitting","submitForm","isValid","name","onChange","onBlur","value","placeholder","disabled","openNotification","message","description","notification","errorNotification","App","state","students","isFetching","isAddStudentModalVisible","openAddStudentModal","setState","closeAddStudentModal","fetchStudents","res","console","log","this","commonElements","title","visible","onOk","onCancel","httpStatus","length","LoadingOutlined","indicator","fontSize","spin","columns","key","render","text","charAt","toUpperCase","dataIndex","dataSource","pagination","rowKey","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.b212eda5.chunk.js","sourcesContent":["import { React } from 'react';\r\n\r\n\r\nexport const Container = props => (\r\n    <div style={{width: '1400px', margin: '0 auto', textAlign:'center', paddingBottom:'1px'}}>\r\n        {props.children}\r\n    </div>\r\n);\r\n\r\nexport default Container;","import { React } from \"react\";\r\nimport { Container } from \"./Container\";\r\nimport { Button, Avatar} from 'antd';\r\nimport './Footer.css';\r\n\r\nconst Footer = (props) => (\r\n    <div className='footer'>\r\n        <Container>\r\n            {props.numberOfStudents !== undefined ? \r\n                <Avatar \r\n                    style={{backgroundColor: '#F56a00', marginRight: '5px'}} \r\n                    size='large'>{props.numberOfStudents}</Avatar>:null\r\n                }\r\n            <Button onClick={()=> props.handleAddStudentClickEvent()} type='primary'>Add new student</Button>\r\n        </Container>\r\n    </div>\r\n);\r\n\r\nexport default Footer;","import fetch from 'unfetch';\r\n\r\nconst checkStatus = response => {\r\n    if (response.ok) {\r\n        return response\r\n    } else {\r\n        let error = new Error(response.statusText);\r\n        error.response = response;\r\n        response.json().then(e => {\r\n            error.error = e;\r\n        });\r\n        return Promise.reject(error);\r\n    }\r\n}\r\n\r\n\r\nexport const getAllStudents = () => \r\n    fetch('api/students').then(checkStatus);\r\n\r\nexport const addNewStudent = student => \r\n    fetch('api/students', {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'POST',\r\n        body: JSON.stringify(student)\r\n    })\r\n    .then(checkStatus);\r\n\r\n\r\n","import { Formik } from 'formik';\r\nimport { Input, Button, Tag } from 'antd';\r\nimport { addNewStudent } from '../client.js';\r\n\r\nconst inputButtonMargin = {marginBottom: '5px'};\r\nconst tagStyle = {backgroundColor: '#f50', color: 'white', ...inputButtonMargin};\r\n\r\nconst AddStudentForm = (props) => (\r\n    <Formik\r\n//Hodnoty pro nově inicializovaný modal\r\n    initialValues={{ firstName: '', lastName: '', email: '', gender:''}}\r\n    //????\r\n    validate={values => {\r\n        //Do errors ukládáme všechny chyby které nakonec vypíšeme\r\n        const errors = {};\r\n\r\n        //Validace křestního jména\r\n        if (!values.firstName) {\r\n            errors.firstName = 'First Name is required'\r\n        }\r\n        \r\n        //Validace příjmení\r\n        if (!values.lastName) {\r\n            errors.lastName = 'Last Name is required'\r\n        }\r\n\r\n        //Validace hodnoty emailu jako regex\r\n        if (!values.email) {\r\n            errors.email = 'Required';\r\n        } else if (\r\n        !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n        ) {\r\n            errors.email = 'Invalid email address';\r\n        }\r\n\r\n        //Validace pohlaví\r\n        if (!values.gender) {\r\n            errors.gender = 'Gender is required'\r\n        } else if (!['MALE','male','FEMALE','female'].includes(values.gender)){\r\n            errors.gender = 'Gender must by MALE / FEMALE'\r\n        }\r\n        //Vypiš všechny chyby v errors\r\n        return errors;\r\n\r\n        }}\r\n        onSubmit={(newStudent, { setSubmitting }) => {\r\n            addNewStudent(newStudent).then(() => {\r\n                //alert(JSON.stringify(newStudent));\r\n                props.onSuccess();\r\n            })\r\n            .catch(err=>{\r\n                props.onFailure(err);\r\n            })\r\n            .finally(()=>{\r\n                setSubmitting(false);\r\n            })\r\n            \r\n        }}>\r\n    {({\r\n        values,\r\n        errors,\r\n        touched,\r\n        handleChange,\r\n        handleBlur,\r\n        handleSubmit,\r\n        isSubmitting,\r\n        submitForm,\r\n        isValid\r\n        /* and other goodies */\r\n        //Jednotlivé input fieldy a jejich vlastnosti - style je definovaný const na začátku dokument\r\n    }) => (\r\n        <form onSubmit={handleSubmit}>\r\n            \r\n            <Input\r\n                style={inputButtonMargin}\r\n                name=\"firstName\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.firstName}\r\n                placeholder='First Name'\r\n            />\r\n            {errors.firstName && touched.firstName && <Tag style={tagStyle}>{errors.firstName}</Tag>}\r\n            <Input\r\n                style={inputButtonMargin}\r\n                name=\"lastName\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.lastName}\r\n                placeholder='Last Name'\r\n            />\r\n            {errors.lastName && touched.lastName && <Tag style={tagStyle}>{errors.lastName}</Tag>}\r\n\r\n\r\n            <Input\r\n                style={inputButtonMargin}\r\n                name=\"email\"\r\n                type=\"email\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.email}\r\n                placeholder='Email'\r\n            />\r\n            {errors.email && touched.email && <Tag style={tagStyle}>{errors.email}</Tag>}\r\n\r\n            <Input\r\n                style={inputButtonMargin}\r\n                name=\"gender\"\r\n                onChange={handleChange}\r\n                onBlur={handleBlur}\r\n                value={values.gender}\r\n                placeholder='Gender'\r\n            />\r\n            {errors.gender && touched.gender && <Tag style={tagStyle}>{errors.gender}</Tag>}\r\n\r\n            <Button \r\n                onClick={()=>submitForm()} \r\n                type=\"submit\" \r\n                disabled={isSubmitting | (touched && !isValid)}>\r\n                Submit\r\n            </Button>\r\n\r\n        </form>\r\n    )}\r\n    </Formik>\r\n);\r\n\r\nexport default AddStudentForm;","\r\nimport { notification } from 'antd';\r\n\r\nconst openNotification = (type, message, description)=> {\r\n    notification[type]({\r\n      message,\r\n      description\r\n    });\r\n  };\r\n\r\nexport const successNotification = (message,description) => openNotification('sucess',message,description);\r\nexport const infoNotification = (message,description) => openNotification('info',message,description);\r\nexport const warningNotification = (message,description) => openNotification('warning',message,description);\r\nexport const errorNotification = (message,description) => openNotification('error',message,description);","import React, { Component } from 'react';\nimport Container from './Container';\nimport Footer from './Footer';\nimport './App.css';\nimport {getAllStudents } from './client';\nimport AddStudentForm from './forms/AddStudentForm';\nimport {errorNotification, successNotification} from './Notification';\nimport {Table, Avatar, Modal, Empty, Icon} from \"antd\";\nimport {LoadingOutlined} from '@ant-design/icons';\n\n\nconst getIndicatorIcon = () => <LoadingOutlined style={{ fontSize: '48px'}} spin/>;\n\nclass App extends Component{\n\n  //Nastav students na empty \n  //Nastav spinner na false\nstate = {\n  students: [],\n  isFetching: false,\n  isAddStudentModalVisible: false\n}\n\ncomponentDidMount(){\n  this.fetchStudents();\n}\n\n\nopenAddStudentModal = () => this.setState({isAddStudentModalVisible:true})\ncloseAddStudentModal = () => this.setState({isAddStudentModalVisible:false})\n\n//Metoda pro získání všech studentů z JSON\nfetchStudents = ()=> {\n  //Nastav state pro spinner -> načítám data\n  this.setState({\n    isFetching: true\n  });\n  //Vypiš všechny studenty do students a do logu\n  getAllStudents()\n    .then(res => res.json()\n    .then(students => {\n      console.log(students);\n      //vrací hodnotu do students a nastaví fetching na false -> dokončeno fetchovani\n      this.setState({\n        students,\n        isFetching: false\n      });\n  }))\n  .catch(error => {\n    console.log(error.error);\n    const message = error.error.message;\n    const description = error.error.error;\n    errorNotification(message, description);\n    this.setState({\n      isFetching: false\n    });\n  });\n}\n\nrender() {\n\n    const {students, isFetching, isAddStudentModalVisible} = this.state;\n\n    // Common elements modal a footer pro stránku Ok a No studentFound\n    const commonElements = () => (\n      <div>\n        <Modal\n          title='+ Add New Student}'\n          visible={isAddStudentModalVisible}\n          onOk={this.closeAddStudentModal}\n          onCancel={this.closeAddStudentModal}\n          width={250}>\n          \n            <AddStudentForm \n              onSuccess={()=>{\n                this.closeAddStudentModal();\n                this.fetchStudents();\n              }}\n              onFailure={(error)=> {\n                const message = error.error.message;\n                const description = error.error.httpStatus;\n                console.log(JSON.stringify(error));\n                errorNotification(message,description);\n              }}\n            />\n        </Modal>\n        <Footer \n          numberOfStudents={students.length}\n          handleAddStudentClickEvent={this.openAddStudentModal}>\n        </Footer>\n      </div>\n    )\n\n    if (isFetching){\n      return(\n        <Container>\n          <LoadingOutlined indicator={getIndicatorIcon()}/>\n        </Container>\n      )\n    }\n\n    //pokud students !empty vytisnkni studenty, jinak ->\n    if (students && students.length) {\n      \n      //Sloupce tabulky + AVATAR vytvoření z prvních písmen frsn a lasn\n      const columns = [\n        {\n        title: '',\n        key: 'Avatar',\n        render:(text,student)=>(\n            <Avatar size='large'>\n              {`${student.firstName.charAt(0).toUpperCase()}${student.lastName.charAt(0).toUpperCase()}`}\n            </Avatar>\n          )\n        },\n      \n        {\n          title: 'Student Id',\n          dataIndex: 'studentId',\n          key: 'studentId'\n        },\n        {\n          title: 'firstName',\n          dataIndex: 'firstName',\n          key: 'firstName'\n        },\n        {\n          title: 'lastName',\n          dataIndex: 'lastName',\n          key: 'lastName'\n        },\n        {\n          title: 'email',\n          dataIndex: 'email',\n          key: 'email'\n        },\n        {\n          title: 'gender',\n          dataIndex: 'gender',\n          key: 'gender'\n        },\n      ];\n//samotný print obsahu zdroj, sloupce, pagintation a podle čeho bereme studenty\n//Container dělá odsazení tabulky od okrajů a je v Container.JS\n      return (\n        <Container>  \n          <Table \n            style={{marginBottom:'70px'}}\n            dataSource={students} \n            columns={columns} \n            pagination={false}\n            rowKey='studentId' \n          />\n        {commonElements()}\n        </Container>\n\n      );\n\n    }\n    // POkud neexistuje žádný student, zobraz hlášku\n    return (\n      <Container>\n        <Empty description={\n          <h1>No Students were found</h1>\n        } />\n        {commonElements()}\n      </Container>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'antd/dist/antd.css';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}